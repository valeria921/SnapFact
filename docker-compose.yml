version: '3.9'

services:
    db:
        image: postgres:17-bookworm
        volumes:
            - postgres_data:/var/lib/postgresql/data
        env_file:
            - ./backend/.env.docker
        healthcheck:
            test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
            interval: 2s
            timeout: 10s
            retries: 5
            start_period: 30s

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        init: true
        volumes:
            - static_data:/app/staticfiles
            - media_data:/vol/web/media
        env_file:
            - ./backend/.env.docker
        restart: unless-stopped
        # command: gunicorn SnapFact.wsgi:application --bind 0.0.0.0:8000
        depends_on:
            db:
                condition: service_healthy

    # frontend: # Commented out as it seems redundant with Nginx serving the build from the host
    #     build: ./frontend
    #     restart: unless-stopped
    #     depends_on:
    #         - backend
    #     environment:
    #       - REACT_APP_API_URL=https://idonotlikedocker.com/api
    #     command: sh -c "npm install && npm run build"

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./frontend/build:/usr/share/nginx/html
            - static_data:/vol/web/static
            - media_data:/vol/web/media
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - ./nginx/ssl:/var/www/certbot
            - ./nginx/init-nginx.sh:/docker-entrypoint.d/init-nginx.sh
        depends_on:
            - backend
        command: >
            sh -c "/docker-entrypoint.d/init-nginx.sh && \
                   nginx -g 'daemon off;'"

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - ./nginx/ssl:/var/www/certbot
        entrypoint: >
            sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot \
                    --email valeria.kruk921@gmail.com --agree-tos --no-eff-email \
                    -d idonotlikedocker.com -d www.idonotlikedocker.com --rsa-key-size 4096 --force-renewal --non-interactive || true"
        command: >
            sh -c "sleep 10 && certbot renew --quiet && docker exec nginx nginx -s reload"

volumes:
    postgres_data:
    node_modules:
    static_data:
    media_data:
    certbot-etc:
    certbot-var:
